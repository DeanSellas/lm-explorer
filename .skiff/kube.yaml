apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: lm-explorer-ingress
  namespace: lm-explorer
  annotations:
    certmanager.k8s.io/cluster-issuer: letsencrypt-prod
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/enable-cors: "false"
spec:
  tls:
    - secretName: lm-explorer-tls
      hosts:
      - lm-explorer.apps.allenai.org
      - gpt2.apps.allenai.org
  rules:
  - host: lm-explorer.apps.allenai.org
    http:
      paths:
      - backend:
          serviceName: lm-explorer
          servicePort: 80
  - host: gpt2.apps.allenai.org
    http:
      paths:
      - backend:
          serviceName: lm-explorer
          servicePort: 80
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  labels:
    app: lm-explorer
  name: lm-explorer
  namespace: lm-explorer
spec:
  replicas: 1
  strategy:
    rollingUpdate:
      # Let k8s spin up a full set of replicas since they take so long to
      # initialize
      maxSurge: 2
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: lm-explorer
      name: lm-explorer
      namespace: lm-explorer
    spec:
      containers:
        - name: lm-explorer
          image: '%IMAGE%'
          # Checks whether a newly started pod is ready to receive traffic.
          # We wait as long as 5 minutes, as the lm-explorer loads a pretty big
          # model form S3. Logs show this takes ~3 minutes or so in GCP land
          # so we'll call 5 minutes good.
          readinessProbe:
            failureThreshold: 9
            periodSeconds: 30
            httpGet:
              path: /
              port: 8000
              scheme: HTTP
            initialDelaySeconds: 120
          # Checks whehter a pod is still alive and can continue to receive traffic.
          # After 6 failed checks spaced by 10 seconds, the pod will be killed and restarted.
          # See https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes
          livenessProbe:
            failureThreshold: 6
            periodSeconds: 10
            httpGet:
              path: /
              port: 8000
              scheme: HTTP
            initialDelaySeconds: 120
          resources:
            requests:
              cpu: "1"
              memory: 6000Mi
          env:
            - name: GOOGLE_ANALYTICS_UA
              value: UA-120916510-4
---
apiVersion: v1
kind: Service
metadata:
  name: lm-explorer
  namespace: lm-explorer
spec:
  selector:
    app: lm-explorer
  ports:
    - port: 80
      targetPort: 8000
      name: http
